version: '3.8'

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: unicon
    ports:
      - 5441:5432
    networks:
      - "local-development"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 3s
      retries: 5

  queue:
    image: rabbitmq:3-management
    ports:
      - "5673:5672"
      - "15673:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: password
    networks:
      - "local-development"
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q check_running"]
      interval: 5s
      timeout: 3s
      retries: 5

  app-lambda:
    depends_on:
      db:
        condition: service_healthy
      queue:
        condition: service_healthy
    build:
      context: .
      dockerfile: docker_images/deploy/Dockerfile.deploy
    environment:
      - ENVIRONMENT=docker
      - TYPE_HANDLER=LAMBDA
    env_file:
      - ./.envs/.env.docker
    ports:
      - 9000:8080
    networks:
      - "local-development"

  app-api:
    depends_on:
      db:
        condition: service_healthy
      queue:
        condition: service_healthy
    build:
      context: .
      dockerfile: docker_images/local/Dockerfile.local
    environment:
      - ENVIRONMENT=docker
      - TYPE_HANDLER=API
    env_file:
      - ./.envs/.env.docker
    ports:
      - 9001:8000
    networks:
      - "local-development"

networks:
  local-development:

